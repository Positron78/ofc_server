name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: organicfreshcoffee-game-server
  REGION: us-central1
  REGISTRY: us-central1-docker.pkg.dev

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Build TypeScript
      run: npm run build

  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
        
    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker ${{ env.REGISTRY }}
      
    - name: Build Docker image
      run: |
        docker build -f Dockerfile.prod \
          -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/game-server/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/game-server/${{ env.SERVICE_NAME }}:latest \
          .
          
    - name: Push Docker image
      run: |
        docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/game-server/${{ env.SERVICE_NAME }}:${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/game-server/${{ env.SERVICE_NAME }}:latest
        
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/game-server/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --port 3002 \
          --memory 1Gi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --concurrency 1000 \
          --timeout 3600 \
          --set-env-vars NODE_ENV=production,AUTH_SERVER_URL=${{ secrets.AUTH_SERVER_URL }},MONGODB_URI=${{ secrets.MONGODB_URI }},CLIENT_URL=${{ secrets.CLIENT_URL }}
          
    - name: Get Cloud Run URL
      run: |
        SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)')
        echo "üöÄ Service deployed successfully!"
        echo "üì± Service URL: $SERVICE_URL"
        echo "üîå WebSocket URL: ${SERVICE_URL/https:/wss:}/game"
        echo "‚ù§Ô∏è  Health Check: $SERVICE_URL/health"
